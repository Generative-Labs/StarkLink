import { DBSchema, IDBPDatabase } from 'idb';
import { Client } from '../client';
import { Web3MQDBValue } from '../types';
interface Web3MQDB extends DBSchema {
    chat_history: {
        key: string;
        value: Web3MQDBValue;
        indexes: {
            roomId: string;
        };
    };
}
export declare class Storage {
    private readonly _client;
    private readonly _keys;
    dbName: string;
    db: IDBPDatabase<Web3MQDB> | null;
    constructor(client: Client);
    createDB(): Promise<void>;
    setData(key: string, data: Web3MQDBValue): Promise<string>;
    getData(key: string): Promise<Web3MQDBValue | undefined>;
    getDataFromIndex(indexKey: string): Promise<Web3MQDBValue | undefined>;
    delData(key: string): Promise<void>;
    clearData(): Promise<void>;
    getAllData(): Promise<Web3MQDBValue[]>;
    getAllKeys(): Promise<string[]>;
}
export {};
