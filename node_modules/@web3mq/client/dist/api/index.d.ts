import { CreateRoomParams, CommonGetListParams, GetMessageListParams, BaseParams, NewBaseParams, GetGroupMemberListParams, InviteGroupMemberParams, JoinGroupParams, GetGroupPermissionsParams, UpdateGroupPermissionsParams, ChangeMessageStatusParams, SearchParams, ProfileParams, SendFriendParams, OperationFriendParams, NewCommonGetListParams, UpdateMyProfileResponse, ChangeNotificationStatusParams, SyncNewMessagesParams, CreateTopicParams, SubscribeTopicParams, PublishTopicMessageParams, GetTopicListParams, GetUserInfoParams, RegisterParams, LoginApiParams, GetUserBindDidsParams, UserBindDidParams, FollowOperationParams, GetUserPublicProfileParams, GetPublicFollowerListParams, PublishNotificationToFollowersParams, GetTargetUserPermissionsParams, UpdateRoomListParams, UpdateUserPermissionsParams, RegisterApiResponse } from '../types';
/**
 * @deprecated
 */
export declare const savePublicKeyRequest: (payload: any) => Promise<import("axios").AxiosResponse<any, any>>;
/**
 * @API Channel
 */
export declare const createRoomRequest: (payload: CreateRoomParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const getRoomListRequest: (payload: CommonGetListParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const updateRoomListRequest: (payload: UpdateRoomListParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const getGroupMemberListRequest: (payload: GetGroupMemberListParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const inviteGroupMemberRequest: (payload: InviteGroupMemberParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const joinGroupRequest: (payload: JoinGroupParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const updateGroupPermissionsRequest: (payload: UpdateGroupPermissionsParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const getGroupPermissionsRequest: (payload: GetGroupPermissionsParams) => Promise<import("axios").AxiosResponse<any, any>>;
/**
 * @API Message
 */
export declare const getMessageListRequest: (payload: GetMessageListParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const changeMessageStatusRequest: (payload: ChangeMessageStatusParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const syncNewMessagesRequest: (payload: SyncNewMessagesParams) => Promise<import("axios").AxiosResponse<any, any>>;
/**
 * @API User
 */
export declare const searchUsersRequest: (payload: SearchParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const getMyProfileRequest: (payload: BaseParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const updateMyProfileRequest: (payload: ProfileParams) => Promise<UpdateMyProfileResponse>;
export declare const getUserInfoRequest: (payload: GetUserInfoParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const userRegisterRequest: (payload: RegisterParams) => Promise<RegisterApiResponse>;
export declare const resetPasswordRequest: (payload: RegisterParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const userLoginRequest: (payload: LoginApiParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const getUserBindDidsRequest: (payload: GetUserBindDidsParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const userBindDidRequest: (payload: UserBindDidParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const followOperationRequest: (payload: FollowOperationParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const getFollowerListRequest: (payload: NewCommonGetListParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const getFollowingListRequest: (payload: NewCommonGetListParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const getUserPublicProfileRequest: (payload: GetUserPublicProfileParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const getPublicFollowerListRequest: (payload: GetPublicFollowerListParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const getPublicFollowingListRequest: (payload: GetPublicFollowerListParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const publishNotificationToFollowersRequest: (payload: PublishNotificationToFollowersParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const getTargetUserPermissionsRequest: (payload: GetTargetUserPermissionsParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const getUserPermissionsRequest: (payload: NewBaseParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const updateUserPermissionsRequest: (payload: UpdateUserPermissionsParams) => Promise<import("axios").AxiosResponse<any, any>>;
/**
 * @API Contact
 */
export declare const searchContactRequest: (payload: SearchParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const getContactListRequest: (payload: NewCommonGetListParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const sendFriendRequest: (payload: SendFriendParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const getMyFriendListRequset: (payload: CommonGetListParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const getRreceiveFriendListRequests: (payload: CommonGetListParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const operationFriendRequest: (payload: OperationFriendParams) => Promise<import("axios").AxiosResponse<any, any>>;
/**
 * @API Notification
 */
export declare const changeNotificationStatusRequest: (payload: ChangeNotificationStatusParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const createTopicRequest: (payload: CreateTopicParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const subscribeTopicRequest: (payload: SubscribeTopicParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const publishTopicMessageRequest: (payload: PublishTopicMessageParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const myCreateTopicListRequest: (payload: GetTopicListParams) => Promise<import("axios").AxiosResponse<any, any>>;
export declare const mySubscribeTopicListRequest: (payload: GetTopicListParams) => Promise<import("axios").AxiosResponse<any, any>>;
