import { Client } from '../client';
import { SearchUsersResponse, ServiceResponse, UserBindDidParams, UserBindDidIdsResponse, UserPermissionsType, UpdateMyProfileResponse, UpdateUserPermissionsParams } from '../types';
export declare class User {
    private readonly _client;
    private readonly _keys;
    userInfo: SearchUsersResponse | null;
    constructor(client: Client);
    searchUsers(walletAddress: string): Promise<SearchUsersResponse>;
    getMyProfile(): Promise<SearchUsersResponse>;
    updateMyProfile(nickname: string, avatar_url: string): Promise<UpdateMyProfileResponse>;
    getUserBindDids(): Promise<UserBindDidIdsResponse>;
    userBindDid(params: Omit<UserBindDidParams, 'userid' | 'web3mq_signature' | 'timestamp'>): Promise<ServiceResponse>;
    getUserPermissions(): Promise<UserPermissionsType>;
    getTargetUserPermissions(userId: string): Promise<import("axios").AxiosResponse<any, any>>;
    updateUserPermissions(params: Pick<UpdateUserPermissionsParams, 'permissions'>): Promise<import("axios").AxiosResponse<any, any>>;
}
