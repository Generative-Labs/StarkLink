import type { BinaryWriteOptions } from '@protobuf-ts/runtime';
import type { IBinaryWriter } from '@protobuf-ts/runtime';
import type { BinaryReadOptions } from '@protobuf-ts/runtime';
import type { IBinaryReader } from '@protobuf-ts/runtime';
import type { PartialMessage } from '@protobuf-ts/runtime';
import { MessageType } from '@protobuf-ts/runtime';
/**
 * @generated from protobuf message pb.Web3MQRequestMessage
 */
export interface Web3MQRequestMessage {
    /**
     * @generated from protobuf field: bytes payload = 1;
     */
    payload: Uint8Array;
    /**
     * @generated from protobuf field: string contentTopic = 2;
     */
    contentTopic: string;
    /**
     * @generated from protobuf field: uint32 version = 3;
     */
    version: number;
    /**
     * @generated from protobuf field: string comeFrom = 4;
     */
    comeFrom: string;
    /**
     * @generated from protobuf field: string fromSign = 5;
     */
    fromSign: string;
    /**
     * @generated from protobuf field: string payloadType = 6;
     */
    payloadType: string;
    /**
     * @generated from protobuf field: string cipherSuite = 7;
     */
    cipherSuite: string;
    /**
     * @generated from protobuf field: bool needStore = 8;
     */
    needStore: boolean;
    /**
     * @generated from protobuf field: uint64 timestamp = 9;
     */
    timestamp: bigint;
    /**
     * @generated from protobuf field: string messageId = 10;
     */
    messageId: string;
    /**
     * @generated from protobuf field: optional string messageType = 11;
     */
    messageType?: string;
    /**
     * @generated from protobuf field: string nodeId = 12;
     */
    nodeId: string;
    /**
     * user signing key <-> pubkey
     *
     * @generated from protobuf field: string validatePubKey = 13;
     */
    validatePubKey: string;
    /**
     * @generated from protobuf field: map<string, string> extraData = 14;
     */
    extraData: {
        [key: string]: string;
    };
}
/**
 * @generated from protobuf message pb.Web3MQMessageStatusResp
 */
export interface Web3MQMessageStatusResp {
    /**
     * @generated from protobuf field: string messageId = 1;
     */
    messageId: string;
    /**
     * @generated from protobuf field: string contentTopic = 2;
     */
    contentTopic: string;
    /**
     * @generated from protobuf field: string messageStatus = 3;
     */
    messageStatus: string;
    /**
     * @generated from protobuf field: string version = 4;
     */
    version: string;
    /**
     * @generated from protobuf field: string comeFrom = 5;
     */
    comeFrom: string;
    /**
     * @generated from protobuf field: string fromSign = 6;
     */
    fromSign: string;
    /**
     * @generated from protobuf field: uint64 timestamp = 7;
     */
    timestamp: bigint;
}
/**
 * @generated from protobuf message pb.Web3MQChangeMessageStatus
 */
export interface Web3MQChangeMessageStatus {
    /**
     * @generated from protobuf field: string messageId = 1;
     */
    messageId: string;
    /**
     * @generated from protobuf field: string contentTopic = 2;
     */
    contentTopic: string;
    /**
     * @generated from protobuf field: string messageStatus = 3;
     */
    messageStatus: string;
    /**
     * @generated from protobuf field: string version = 4;
     */
    version: string;
    /**
     * @generated from protobuf field: string comeFrom = 5;
     */
    comeFrom: string;
    /**
     * @generated from protobuf field: string fromSign = 6;
     */
    fromSign: string;
    /**
     * @generated from protobuf field: uint64 timestamp = 7;
     */
    timestamp: bigint;
}
/**
 * @generated from protobuf message pb.MessageItem
 */
export interface MessageItem {
    /**
     * @generated from protobuf field: string messageId = 1;
     */
    messageId: string;
    /**
     * @generated from protobuf field: uint32 version = 2;
     */
    version: number;
    /**
     * @generated from protobuf field: bytes payload = 3;
     */
    payload: Uint8Array;
    /**
     * @generated from protobuf field: string payloadType = 4;
     */
    payloadType: string;
    /**
     * @generated from protobuf field: string comeFrom = 5;
     */
    comeFrom: string;
    /**
     * @generated from protobuf field: string fromSign = 6;
     */
    fromSign: string;
    /**
     * @generated from protobuf field: string contentTopic = 7;
     */
    contentTopic: string;
    /**
     * @generated from protobuf field: string cipherSuite = 8;
     */
    cipherSuite: string;
    /**
     * @generated from protobuf field: uint64 timestamp = 9;
     */
    timestamp: bigint;
    /**
     * @generated from protobuf field: bool read = 10;
     */
    read: boolean;
    /**
     * @generated from protobuf field: uint64 readTimestamp = 11;
     */
    readTimestamp: bigint;
}
/**
 * @generated from protobuf message pb.Web3MQMessageListResponse
 */
export interface Web3MQMessageListResponse {
    /**
     * @generated from protobuf field: repeated pb.MessageItem data = 1;
     */
    data: MessageItem[];
}
/**
 * @generated from protobuf message pb.GetHistoryMessagesRequest
 */
export interface GetHistoryMessagesRequest {
    /**
     * @generated from protobuf field: string comeFrom = 1;
     */
    comeFrom: string;
    /**
     * @generated from protobuf field: string fromSign = 2;
     */
    fromSign: string;
    /**
     * @generated from protobuf field: uint32 version = 3;
     */
    version: number;
    /**
     * @generated from protobuf field: uint64 timestamp = 4;
     */
    timestamp: bigint;
}
declare class Web3MQRequestMessage$Type extends MessageType<Web3MQRequestMessage> {
    constructor();
    create(value?: PartialMessage<Web3MQRequestMessage>): Web3MQRequestMessage;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Web3MQRequestMessage): Web3MQRequestMessage;
    private binaryReadMap14;
    internalBinaryWrite(message: Web3MQRequestMessage, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message pb.Web3MQRequestMessage
 */
export declare const Web3MQRequestMessage: Web3MQRequestMessage$Type;
declare class Web3MQMessageStatusResp$Type extends MessageType<Web3MQMessageStatusResp> {
    constructor();
    create(value?: PartialMessage<Web3MQMessageStatusResp>): Web3MQMessageStatusResp;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Web3MQMessageStatusResp): Web3MQMessageStatusResp;
    internalBinaryWrite(message: Web3MQMessageStatusResp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message pb.Web3MQMessageStatusResp
 */
export declare const Web3MQMessageStatusResp: Web3MQMessageStatusResp$Type;
declare class Web3MQChangeMessageStatus$Type extends MessageType<Web3MQChangeMessageStatus> {
    constructor();
    create(value?: PartialMessage<Web3MQChangeMessageStatus>): Web3MQChangeMessageStatus;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Web3MQChangeMessageStatus): Web3MQChangeMessageStatus;
    internalBinaryWrite(message: Web3MQChangeMessageStatus, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message pb.Web3MQChangeMessageStatus
 */
export declare const Web3MQChangeMessageStatus: Web3MQChangeMessageStatus$Type;
declare class MessageItem$Type extends MessageType<MessageItem> {
    constructor();
    create(value?: PartialMessage<MessageItem>): MessageItem;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MessageItem): MessageItem;
    internalBinaryWrite(message: MessageItem, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message pb.MessageItem
 */
export declare const MessageItem: MessageItem$Type;
declare class Web3MQMessageListResponse$Type extends MessageType<Web3MQMessageListResponse> {
    constructor();
    create(value?: PartialMessage<Web3MQMessageListResponse>): Web3MQMessageListResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Web3MQMessageListResponse): Web3MQMessageListResponse;
    internalBinaryWrite(message: Web3MQMessageListResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message pb.Web3MQMessageListResponse
 */
export declare const Web3MQMessageListResponse: Web3MQMessageListResponse$Type;
declare class GetHistoryMessagesRequest$Type extends MessageType<GetHistoryMessagesRequest> {
    constructor();
    create(value?: PartialMessage<GetHistoryMessagesRequest>): GetHistoryMessagesRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetHistoryMessagesRequest): GetHistoryMessagesRequest;
    internalBinaryWrite(message: GetHistoryMessagesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message pb.GetHistoryMessagesRequest
 */
export declare const GetHistoryMessagesRequest: GetHistoryMessagesRequest$Type;
export {};
