import type { BinaryWriteOptions } from '@protobuf-ts/runtime';
import type { IBinaryWriter } from '@protobuf-ts/runtime';
import type { BinaryReadOptions } from '@protobuf-ts/runtime';
import type { IBinaryReader } from '@protobuf-ts/runtime';
import type { PartialMessage } from '@protobuf-ts/runtime';
import { MessageType } from '@protobuf-ts/runtime';
/**
 * @generated from protobuf message pb.WebsocketPingCommand
 */
export interface WebsocketPingCommand {
    /**
     * @generated from protobuf field: optional string nodeId = 1;
     */
    nodeId?: string;
    /**
     * @generated from protobuf field: optional string userId = 2;
     */
    userId?: string;
    /**
     * @generated from protobuf field: optional uint64 timestamp = 3;
     */
    timestamp?: bigint;
    /**
     * @generated from protobuf field: optional string msgSign = 4;
     */
    msgSign?: string;
}
/**
 * @generated from protobuf message pb.WebsocketPongCommand
 */
export interface WebsocketPongCommand {
    /**
     * @generated from protobuf field: optional string nodeId = 1;
     */
    nodeId?: string;
    /**
     * @generated from protobuf field: optional string userId = 2;
     */
    userId?: string;
    /**
     * @generated from protobuf field: optional uint64 timestamp = 3;
     */
    timestamp?: bigint;
    /**
     * @generated from protobuf field: optional string msgSign = 4;
     */
    msgSign?: string;
}
declare class WebsocketPingCommand$Type extends MessageType<WebsocketPingCommand> {
    constructor();
    create(value?: PartialMessage<WebsocketPingCommand>): WebsocketPingCommand;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WebsocketPingCommand): WebsocketPingCommand;
    internalBinaryWrite(message: WebsocketPingCommand, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message pb.WebsocketPingCommand
 */
export declare const WebsocketPingCommand: WebsocketPingCommand$Type;
declare class WebsocketPongCommand$Type extends MessageType<WebsocketPongCommand> {
    constructor();
    create(value?: PartialMessage<WebsocketPongCommand>): WebsocketPongCommand;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WebsocketPongCommand): WebsocketPongCommand;
    internalBinaryWrite(message: WebsocketPongCommand, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message pb.WebsocketPongCommand
 */
export declare const WebsocketPongCommand: WebsocketPongCommand$Type;
export {};
