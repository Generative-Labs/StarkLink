import type { BinaryWriteOptions } from '@protobuf-ts/runtime';
import type { IBinaryWriter } from '@protobuf-ts/runtime';
import type { BinaryReadOptions } from '@protobuf-ts/runtime';
import type { IBinaryReader } from '@protobuf-ts/runtime';
import type { PartialMessage } from '@protobuf-ts/runtime';
import { MessageType } from '@protobuf-ts/runtime';
/**
 * @generated from protobuf message pb.Web3MQBridgeConnectCommand
 */
export interface Web3MQBridgeConnectCommand {
    /**
     * @generated from protobuf field: string NodeID = 1 [json_name = "NodeID"];
     */
    nodeID: string;
    /**
     * @generated from protobuf field: string DAppID = 2 [json_name = "DAppID"];
     */
    dAppID: string;
    /**
     * @generated from protobuf field: string TopicID = 3 [json_name = "TopicID"];
     */
    topicID: string;
    /**
     * @generated from protobuf field: optional uint64 SignatureTimestamp = 4 [json_name = "SignatureTimestamp"];
     */
    signatureTimestamp?: bigint;
    /**
     * @generated from protobuf field: optional string DAppSignature = 5 [json_name = "DAppSignature"];
     */
    dAppSignature?: string;
}
declare class Web3MQBridgeConnectCommand$Type extends MessageType<Web3MQBridgeConnectCommand> {
    constructor();
    create(value?: PartialMessage<Web3MQBridgeConnectCommand>): Web3MQBridgeConnectCommand;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Web3MQBridgeConnectCommand): Web3MQBridgeConnectCommand;
    internalBinaryWrite(message: Web3MQBridgeConnectCommand, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message pb.Web3MQBridgeConnectCommand
 */
export declare const Web3MQBridgeConnectCommand: Web3MQBridgeConnectCommand$Type;
export {};
