import { SignClientCallBackType, KeyPairsType, Web3MQBridgeOptions, DappConnectSignParams } from '../types';
export declare class DappConnect {
    private _options;
    private timeout;
    private timeoutObj;
    ws: WebSocket | null;
    wsUrl: string;
    nodeId: string;
    topicID: string;
    otherTopicID: string;
    publicKeyProps: string;
    tempKeys: Omit<KeyPairsType, 'userid'> | null;
    callback: (params: SignClientCallBackType) => void;
    constructor(options: Web3MQBridgeOptions, callback: (params: SignClientCallBackType) => void);
    private getAesKey;
    private handleGetEncryptData;
    private init;
    private onMessageCallback;
    private send;
    getConnectLink: () => string;
    sendSign: (options: DappConnectSignParams) => Promise<void>;
    sendPing(): void;
    reset(): void;
    start(): void;
    receive(pbType: number, bytes?: Uint8Array): void;
}
