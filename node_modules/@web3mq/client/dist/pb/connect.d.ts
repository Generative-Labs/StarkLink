import type { BinaryWriteOptions } from '@protobuf-ts/runtime';
import type { IBinaryWriter } from '@protobuf-ts/runtime';
import type { BinaryReadOptions } from '@protobuf-ts/runtime';
import type { IBinaryReader } from '@protobuf-ts/runtime';
import type { PartialMessage } from '@protobuf-ts/runtime';
import { MessageType } from '@protobuf-ts/runtime';
/**
 * @generated from protobuf message pb.ConnectCommand
 */
export interface ConnectCommand {
    /**
     * @generated from protobuf field: string nodeId = 1;
     */
    nodeId: string;
    /**
     * @generated from protobuf field: string userId = 2;
     */
    userId: string;
    /**
     * @generated from protobuf field: uint64 timestamp = 3;
     */
    timestamp: bigint;
    /**
     * @generated from protobuf field: string msgSign = 4;
     */
    msgSign: string;
}
/**
 * @generated from protobuf message pb.DisconnectCommand
 */
export interface DisconnectCommand {
    /**
     * @generated from protobuf field: string nodeId = 1;
     */
    nodeId: string;
    /**
     * @generated from protobuf field: string userId = 2;
     */
    userId: string;
    /**
     * @generated from protobuf field: uint64 timestamp = 3;
     */
    timestamp: bigint;
    /**
     * @generated from protobuf field: string msgSign = 4;
     */
    msgSign: string;
}
/**
 * @generated from protobuf message pb.UserTempConnectCommand
 */
export interface UserTempConnectCommand {
    /**
     * @generated from protobuf field: string NodeID = 1 [json_name = "NodeID"];
     */
    nodeID: string;
    /**
     * @generated from protobuf field: string DAppID = 2 [json_name = "DAppID"];
     */
    dAppID: string;
    /**
     * @generated from protobuf field: string TopicID = 3 [json_name = "TopicID"];
     */
    topicID: string;
    /**
     * @generated from protobuf field: uint64 SignatureTimestamp = 4 [json_name = "SignatureTimestamp"];
     */
    signatureTimestamp: bigint;
    /**
     * @generated from protobuf field: string DAppSignature = 5 [json_name = "DAppSignature"];
     */
    dAppSignature: string;
}
/**
 * @generated from protobuf message pb.UserTempConnectResp
 */
export interface UserTempConnectResp {
    /**
     * @generated from protobuf field: string NodeID = 1 [json_name = "NodeID"];
     */
    nodeID: string;
    /**
     * @generated from protobuf field: string DAppID = 2 [json_name = "DAppID"];
     */
    dAppID: string;
    /**
     * @generated from protobuf field: string TopicID = 3 [json_name = "TopicID"];
     */
    topicID: string;
    /**
     * @generated from protobuf field: int32 statusCode = 4;
     */
    statusCode: number;
    /**
     * @generated from protobuf field: string statusMsg = 5;
     */
    statusMsg: string;
    /**
     * @generated from protobuf field: uint64 Timestamp = 6 [json_name = "Timestamp"];
     */
    timestamp: bigint;
}
declare class ConnectCommand$Type extends MessageType<ConnectCommand> {
    constructor();
    create(value?: PartialMessage<ConnectCommand>): ConnectCommand;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ConnectCommand): ConnectCommand;
    internalBinaryWrite(message: ConnectCommand, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message pb.ConnectCommand
 */
export declare const ConnectCommand: ConnectCommand$Type;
declare class DisconnectCommand$Type extends MessageType<DisconnectCommand> {
    constructor();
    create(value?: PartialMessage<DisconnectCommand>): DisconnectCommand;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DisconnectCommand): DisconnectCommand;
    internalBinaryWrite(message: DisconnectCommand, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message pb.DisconnectCommand
 */
export declare const DisconnectCommand: DisconnectCommand$Type;
declare class UserTempConnectCommand$Type extends MessageType<UserTempConnectCommand> {
    constructor();
    create(value?: PartialMessage<UserTempConnectCommand>): UserTempConnectCommand;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserTempConnectCommand): UserTempConnectCommand;
    internalBinaryWrite(message: UserTempConnectCommand, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message pb.UserTempConnectCommand
 */
export declare const UserTempConnectCommand: UserTempConnectCommand$Type;
declare class UserTempConnectResp$Type extends MessageType<UserTempConnectResp> {
    constructor();
    create(value?: PartialMessage<UserTempConnectResp>): UserTempConnectResp;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserTempConnectResp): UserTempConnectResp;
    internalBinaryWrite(message: UserTempConnectResp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message pb.UserTempConnectResp
 */
export declare const UserTempConnectResp: UserTempConnectResp$Type;
export {};
